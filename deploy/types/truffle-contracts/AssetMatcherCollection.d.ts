/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface AssetMatcherCollectionContract
  extends Truffle.Contract<AssetMatcherCollectionInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<AssetMatcherCollectionInstance>;
}

type AllEvents = never;

export interface AssetMatcherCollectionInstance
  extends Truffle.ContractInstance {
  matchAssets(
    leftAssetType: { assetClass: string; data: string },
    rightAssetType: { assetClass: string; data: string },
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ assetClass: string; data: string }>;

  methods: {
    matchAssets(
      leftAssetType: { assetClass: string; data: string },
      rightAssetType: { assetClass: string; data: string },
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ assetClass: string; data: string }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
