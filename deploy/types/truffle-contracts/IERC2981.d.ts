/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IERC2981Contract extends Truffle.Contract<IERC2981Instance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<IERC2981Instance>;
}

type AllEvents = never;

export interface IERC2981Instance extends Truffle.ContractInstance {
  /**
   * @param _salePrice - the sale price of the NFT asset specified by _tokenId
   * @param _tokenId - the NFT asset queried for royalty information
   */
  royaltyInfo(
    _tokenId: number | BN | string,
    _salePrice: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: string; 1: BN }>;

  methods: {
    /**
     * @param _salePrice - the sale price of the NFT asset specified by _tokenId
     * @param _tokenId - the NFT asset queried for royalty information
     */
    royaltyInfo(
      _tokenId: number | BN | string,
      _salePrice: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: string; 1: BN }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
