/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AssetMatcherContract } from "./AssetMatcher";
import { AssetMatcherCollectionContract } from "./AssetMatcherCollection";
import { AuctionHouse1155Contract } from "./AuctionHouse1155";
import { AuctionHouse721Contract } from "./AuctionHouse721";
import { AuctionHouseBaseContract } from "./AuctionHouseBase";
import { AuctionHouseBase1155Contract } from "./AuctionHouseBase1155";
import { AuctionHouseBase721Contract } from "./AuctionHouseBase721";
import { BeaconProxyContract } from "./BeaconProxy";
import { CryptoPunksMarketContract } from "./CryptoPunksMarket";
import { EIP712MetaTransactionContract } from "./EIP712MetaTransaction";
import { ERC1155BaseContract } from "./ERC1155Base";
import { ERC1155BaseURIContract } from "./ERC1155BaseURI";
import { ERC1155BurnableUpgradeableContract } from "./ERC1155BurnableUpgradeable";
import { ERC1155DefaultApprovalContract } from "./ERC1155DefaultApproval";
import { ERC1155HolderContract } from "./ERC1155Holder";
import { ERC1155HolderUpgradeableContract } from "./ERC1155HolderUpgradeable";
import { ERC1155LazyContract } from "./ERC1155Lazy";
import { ERC1155LazyMintTransferProxyContract } from "./ERC1155LazyMintTransferProxy";
import { ERC1155RaribleContract } from "./ERC1155Rarible";
import { ERC1155RaribleBeaconContract } from "./ERC1155RaribleBeacon";
import { ERC1155RaribleBeaconMetaContract } from "./ERC1155RaribleBeaconMeta";
import { ERC1155RaribleFactoryC2Contract } from "./ERC1155RaribleFactoryC2";
import { ERC1155RaribleMetaContract } from "./ERC1155RaribleMeta";
import { ERC1155ReceiverContract } from "./ERC1155Receiver";
import { ERC1155ReceiverUpgradeableContract } from "./ERC1155ReceiverUpgradeable";
import { ERC1155UpgradeableContract } from "./ERC1155Upgradeable";
import { ERC1271Contract } from "./ERC1271";
import { ERC165Contract } from "./ERC165";
import { ERC165UpgradeableContract } from "./ERC165Upgradeable";
import { ERC20TransferProxyContract } from "./ERC20TransferProxy";
import { ERC20UpgradeableContract } from "./ERC20Upgradeable";
import { ERC721BaseContract } from "./ERC721Base";
import { ERC721BaseMinimalContract } from "./ERC721BaseMinimal";
import { ERC721BurnableUpgradeableContract } from "./ERC721BurnableUpgradeable";
import { ERC721BurnableUpgradeableMinimalContract } from "./ERC721BurnableUpgradeableMinimal";
import { ERC721DefaultApprovalContract } from "./ERC721DefaultApproval";
import { ERC721DefaultApprovalMinimalContract } from "./ERC721DefaultApprovalMinimal";
import { ERC721HolderContract } from "./ERC721Holder";
import { ERC721HolderUpgradeableContract } from "./ERC721HolderUpgradeable";
import { ERC721LazyContract } from "./ERC721Lazy";
import { ERC721LazyMinimalContract } from "./ERC721LazyMinimal";
import { ERC721LazyMintTransferProxyContract } from "./ERC721LazyMintTransferProxy";
import { ERC721RaribleContract } from "./ERC721Rarible";
import { ERC721RaribleBeaconContract } from "./ERC721RaribleBeacon";
import { ERC721RaribleFactoryC2Contract } from "./ERC721RaribleFactoryC2";
import { ERC721RaribleMetaContract } from "./ERC721RaribleMeta";
import { ERC721RaribleMinimalContract } from "./ERC721RaribleMinimal";
import { ERC721RaribleMinimalBeaconContract } from "./ERC721RaribleMinimalBeacon";
import { ERC721RaribleMinimalBeaconMetaContract } from "./ERC721RaribleMinimalBeaconMeta";
import { ERC721UpgradeableContract } from "./ERC721Upgradeable";
import { ERC721UpgradeableMinimalContract } from "./ERC721UpgradeableMinimal";
import { ERC721URIContract } from "./ERC721URI";
import { ExchangeMetaV2Contract } from "./ExchangeMetaV2";
import { ExchangeOrdersHolderV1Contract } from "./ExchangeOrdersHolderV1";
import { ExchangeStateV1Contract } from "./ExchangeStateV1";
import { ExchangeV1Contract } from "./ExchangeV1";
import { ExchangeV2Contract } from "./ExchangeV2";
import { ExchangeV2CoreContract } from "./ExchangeV2Core";
import { HasContractURIContract } from "./HasContractURI";
import { IAssetMatcherContract } from "./IAssetMatcher";
import { IBeaconContract } from "./IBeacon";
import { IBlurContract } from "./IBlur";
import { ICryptoPunksMarketContract } from "./ICryptoPunksMarket";
import { IERC1155LazyMintContract } from "./IERC1155LazyMint";
import { IERC1155MetadataURIUpgradeableContract } from "./IERC1155MetadataURIUpgradeable";
import { IERC1155ReceiverContract } from "./IERC1155Receiver";
import { IERC1155ReceiverUpgradeableContract } from "./IERC1155ReceiverUpgradeable";
import { IERC1155UpgradeableContract } from "./IERC1155Upgradeable";
import { IERC1271Contract } from "./IERC1271";
import { IERC165Contract } from "./IERC165";
import { IERC165UpgradeableContract } from "./IERC165Upgradeable";
import { IERC20TransferProxyContract } from "./IERC20TransferProxy";
import { IERC20UpgradeableContract } from "./IERC20Upgradeable";
import { IERC2981Contract } from "./IERC2981";
import { IERC721EnumerableUpgradeableContract } from "./IERC721EnumerableUpgradeable";
import { IERC721LazyMintContract } from "./IERC721LazyMint";
import { IERC721MetadataUpgradeableContract } from "./IERC721MetadataUpgradeable";
import { IERC721ReceiverContract } from "./IERC721Receiver";
import { IERC721ReceiverUpgradeableContract } from "./IERC721ReceiverUpgradeable";
import { IERC721UpgradeableContract } from "./IERC721Upgradeable";
import { IExchangeV2Contract } from "./IExchangeV2";
import { ILooksRareContract } from "./ILooksRare";
import { IMarketWrapperContract } from "./IMarketWrapper";
import { INftTransferProxyContract } from "./INftTransferProxy";
import { IRoyaltiesProviderContract } from "./IRoyaltiesProvider";
import { ISeaPortContract } from "./ISeaPort";
import { IsPausableContract } from "./IsPausable";
import { ITransferProxyContract } from "./ITransferProxy";
import { IWyvernExchangeContract } from "./IWyvernExchange";
import { Ix2y2Contract } from "./Ix2y2";
import { LibAssetContract } from "./LibAsset";
import { LibAucDataV1Contract } from "./LibAucDataV1";
import { LibBidDataV1Contract } from "./LibBidDataV1";
import { LibERC1155LazyMintContract } from "./LibERC1155LazyMint";
import { LibERC721LazyMintContract } from "./LibERC721LazyMint";
import { LibOrderDataV1Contract } from "./LibOrderDataV1";
import { LibOrderDataV2Contract } from "./LibOrderDataV2";
import { LibOrderDataV3Contract } from "./LibOrderDataV3";
import { LibPartContract } from "./LibPart";
import { LockingContract } from "./Locking";
import { MigrationsContract } from "./Migrations";
import { MintableTokenContract } from "./MintableToken";
import { MinterAccessControlContract } from "./MinterAccessControl";
import { OperatorRoleContract } from "./OperatorRole";
import { OwnableContract } from "./Ownable";
import { OwnableUpgradeableContract } from "./OwnableUpgradeable";
import { ProxyContract } from "./Proxy";
import { PunkTransferProxyContract } from "./PunkTransferProxy";
import { RaribleExchangeWrapperContract } from "./RaribleExchangeWrapper";
import { RaribleTokenContract } from "./RaribleToken";
import { RaribleTransferManagerContract } from "./RaribleTransferManager";
import { RoyaltiesProviderArtBlocksContract } from "./RoyaltiesProviderArtBlocks";
import { RoyaltiesProviderV2LegacyContract } from "./RoyaltiesProviderV2Legacy";
import { RoyaltiesRegistryContract } from "./RoyaltiesRegistry";
import { RoyaltiesV1Contract } from "./RoyaltiesV1";
import { RoyaltiesV2Contract } from "./RoyaltiesV2";
import { RoyaltiesV2ImplContract } from "./RoyaltiesV2Impl";
import { RoyaltiesV2UpgradeableContract } from "./RoyaltiesV2Upgradeable";
import { RoyaltyArtBlocksContract } from "./RoyaltyArtBlocks";
import { RoyaltyV2LegacyContract } from "./RoyaltyV2Legacy";
import { TestERC20Contract } from "./TestERC20";
import { TokenToAuctionContract } from "./TokenToAuction";
import { TransferExecutorContract } from "./TransferExecutor";
import { TransferProxyContract } from "./TransferProxy";
import { TransferProxyForDeprecatedContract } from "./TransferProxyForDeprecated";
import { UpgradeableBeaconContract } from "./UpgradeableBeacon";
import { WETH9Contract } from "./WETH9";
import { WrapperContract } from "./Wrapper";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AssetMatcher"): AssetMatcherContract;
      require(name: "AssetMatcherCollection"): AssetMatcherCollectionContract;
      require(name: "AuctionHouse1155"): AuctionHouse1155Contract;
      require(name: "AuctionHouse721"): AuctionHouse721Contract;
      require(name: "AuctionHouseBase"): AuctionHouseBaseContract;
      require(name: "AuctionHouseBase1155"): AuctionHouseBase1155Contract;
      require(name: "AuctionHouseBase721"): AuctionHouseBase721Contract;
      require(name: "BeaconProxy"): BeaconProxyContract;
      require(name: "CryptoPunksMarket"): CryptoPunksMarketContract;
      require(name: "EIP712MetaTransaction"): EIP712MetaTransactionContract;
      require(name: "ERC1155Base"): ERC1155BaseContract;
      require(name: "ERC1155BaseURI"): ERC1155BaseURIContract;
      require(
        name: "ERC1155BurnableUpgradeable"
      ): ERC1155BurnableUpgradeableContract;
      require(name: "ERC1155DefaultApproval"): ERC1155DefaultApprovalContract;
      require(name: "ERC1155Holder"): ERC1155HolderContract;
      require(
        name: "ERC1155HolderUpgradeable"
      ): ERC1155HolderUpgradeableContract;
      require(name: "ERC1155Lazy"): ERC1155LazyContract;
      require(
        name: "ERC1155LazyMintTransferProxy"
      ): ERC1155LazyMintTransferProxyContract;
      require(name: "ERC1155Rarible"): ERC1155RaribleContract;
      require(name: "ERC1155RaribleBeacon"): ERC1155RaribleBeaconContract;
      require(
        name: "ERC1155RaribleBeaconMeta"
      ): ERC1155RaribleBeaconMetaContract;
      require(name: "ERC1155RaribleFactoryC2"): ERC1155RaribleFactoryC2Contract;
      require(name: "ERC1155RaribleMeta"): ERC1155RaribleMetaContract;
      require(name: "ERC1155Receiver"): ERC1155ReceiverContract;
      require(
        name: "ERC1155ReceiverUpgradeable"
      ): ERC1155ReceiverUpgradeableContract;
      require(name: "ERC1155Upgradeable"): ERC1155UpgradeableContract;
      require(name: "ERC1271"): ERC1271Contract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "ERC165Upgradeable"): ERC165UpgradeableContract;
      require(name: "ERC20TransferProxy"): ERC20TransferProxyContract;
      require(name: "ERC20Upgradeable"): ERC20UpgradeableContract;
      require(name: "ERC721Base"): ERC721BaseContract;
      require(name: "ERC721BaseMinimal"): ERC721BaseMinimalContract;
      require(
        name: "ERC721BurnableUpgradeable"
      ): ERC721BurnableUpgradeableContract;
      require(
        name: "ERC721BurnableUpgradeableMinimal"
      ): ERC721BurnableUpgradeableMinimalContract;
      require(name: "ERC721DefaultApproval"): ERC721DefaultApprovalContract;
      require(
        name: "ERC721DefaultApprovalMinimal"
      ): ERC721DefaultApprovalMinimalContract;
      require(name: "ERC721Holder"): ERC721HolderContract;
      require(name: "ERC721HolderUpgradeable"): ERC721HolderUpgradeableContract;
      require(name: "ERC721Lazy"): ERC721LazyContract;
      require(name: "ERC721LazyMinimal"): ERC721LazyMinimalContract;
      require(
        name: "ERC721LazyMintTransferProxy"
      ): ERC721LazyMintTransferProxyContract;
      require(name: "ERC721Rarible"): ERC721RaribleContract;
      require(name: "ERC721RaribleBeacon"): ERC721RaribleBeaconContract;
      require(name: "ERC721RaribleFactoryC2"): ERC721RaribleFactoryC2Contract;
      require(name: "ERC721RaribleMeta"): ERC721RaribleMetaContract;
      require(name: "ERC721RaribleMinimal"): ERC721RaribleMinimalContract;
      require(
        name: "ERC721RaribleMinimalBeacon"
      ): ERC721RaribleMinimalBeaconContract;
      require(
        name: "ERC721RaribleMinimalBeaconMeta"
      ): ERC721RaribleMinimalBeaconMetaContract;
      require(name: "ERC721Upgradeable"): ERC721UpgradeableContract;
      require(
        name: "ERC721UpgradeableMinimal"
      ): ERC721UpgradeableMinimalContract;
      require(name: "ERC721URI"): ERC721URIContract;
      require(name: "ExchangeMetaV2"): ExchangeMetaV2Contract;
      require(name: "ExchangeOrdersHolderV1"): ExchangeOrdersHolderV1Contract;
      require(name: "ExchangeStateV1"): ExchangeStateV1Contract;
      require(name: "ExchangeV1"): ExchangeV1Contract;
      require(name: "ExchangeV2"): ExchangeV2Contract;
      require(name: "ExchangeV2Core"): ExchangeV2CoreContract;
      require(name: "HasContractURI"): HasContractURIContract;
      require(name: "IAssetMatcher"): IAssetMatcherContract;
      require(name: "IBeacon"): IBeaconContract;
      require(name: "IBlur"): IBlurContract;
      require(name: "ICryptoPunksMarket"): ICryptoPunksMarketContract;
      require(name: "IERC1155LazyMint"): IERC1155LazyMintContract;
      require(
        name: "IERC1155MetadataURIUpgradeable"
      ): IERC1155MetadataURIUpgradeableContract;
      require(name: "IERC1155Receiver"): IERC1155ReceiverContract;
      require(
        name: "IERC1155ReceiverUpgradeable"
      ): IERC1155ReceiverUpgradeableContract;
      require(name: "IERC1155Upgradeable"): IERC1155UpgradeableContract;
      require(name: "IERC1271"): IERC1271Contract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IERC165Upgradeable"): IERC165UpgradeableContract;
      require(name: "IERC20TransferProxy"): IERC20TransferProxyContract;
      require(name: "IERC20Upgradeable"): IERC20UpgradeableContract;
      require(name: "IERC2981"): IERC2981Contract;
      require(
        name: "IERC721EnumerableUpgradeable"
      ): IERC721EnumerableUpgradeableContract;
      require(name: "IERC721LazyMint"): IERC721LazyMintContract;
      require(
        name: "IERC721MetadataUpgradeable"
      ): IERC721MetadataUpgradeableContract;
      require(name: "IERC721Receiver"): IERC721ReceiverContract;
      require(
        name: "IERC721ReceiverUpgradeable"
      ): IERC721ReceiverUpgradeableContract;
      require(name: "IERC721Upgradeable"): IERC721UpgradeableContract;
      require(name: "IExchangeV2"): IExchangeV2Contract;
      require(name: "ILooksRare"): ILooksRareContract;
      require(name: "IMarketWrapper"): IMarketWrapperContract;
      require(name: "INftTransferProxy"): INftTransferProxyContract;
      require(name: "IRoyaltiesProvider"): IRoyaltiesProviderContract;
      require(name: "ISeaPort"): ISeaPortContract;
      require(name: "IsPausable"): IsPausableContract;
      require(name: "ITransferProxy"): ITransferProxyContract;
      require(name: "IWyvernExchange"): IWyvernExchangeContract;
      require(name: "Ix2y2"): Ix2y2Contract;
      require(name: "LibAsset"): LibAssetContract;
      require(name: "LibAucDataV1"): LibAucDataV1Contract;
      require(name: "LibBidDataV1"): LibBidDataV1Contract;
      require(name: "LibERC1155LazyMint"): LibERC1155LazyMintContract;
      require(name: "LibERC721LazyMint"): LibERC721LazyMintContract;
      require(name: "LibOrderDataV1"): LibOrderDataV1Contract;
      require(name: "LibOrderDataV2"): LibOrderDataV2Contract;
      require(name: "LibOrderDataV3"): LibOrderDataV3Contract;
      require(name: "LibPart"): LibPartContract;
      require(name: "Locking"): LockingContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "MintableToken"): MintableTokenContract;
      require(name: "MinterAccessControl"): MinterAccessControlContract;
      require(name: "OperatorRole"): OperatorRoleContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "OwnableUpgradeable"): OwnableUpgradeableContract;
      require(name: "Proxy"): ProxyContract;
      require(name: "PunkTransferProxy"): PunkTransferProxyContract;
      require(name: "RaribleExchangeWrapper"): RaribleExchangeWrapperContract;
      require(name: "RaribleToken"): RaribleTokenContract;
      require(name: "RaribleTransferManager"): RaribleTransferManagerContract;
      require(
        name: "RoyaltiesProviderArtBlocks"
      ): RoyaltiesProviderArtBlocksContract;
      require(
        name: "RoyaltiesProviderV2Legacy"
      ): RoyaltiesProviderV2LegacyContract;
      require(name: "RoyaltiesRegistry"): RoyaltiesRegistryContract;
      require(name: "RoyaltiesV1"): RoyaltiesV1Contract;
      require(name: "RoyaltiesV2"): RoyaltiesV2Contract;
      require(name: "RoyaltiesV2Impl"): RoyaltiesV2ImplContract;
      require(name: "RoyaltiesV2Upgradeable"): RoyaltiesV2UpgradeableContract;
      require(name: "RoyaltyArtBlocks"): RoyaltyArtBlocksContract;
      require(name: "RoyaltyV2Legacy"): RoyaltyV2LegacyContract;
      require(name: "TestERC20"): TestERC20Contract;
      require(name: "TokenToAuction"): TokenToAuctionContract;
      require(name: "TransferExecutor"): TransferExecutorContract;
      require(name: "TransferProxy"): TransferProxyContract;
      require(
        name: "TransferProxyForDeprecated"
      ): TransferProxyForDeprecatedContract;
      require(name: "UpgradeableBeacon"): UpgradeableBeaconContract;
      require(name: "WETH9"): WETH9Contract;
      require(name: "Wrapper"): WrapperContract;
    }
  }
}

export { AssetMatcherContract, AssetMatcherInstance } from "./AssetMatcher";
export {
  AssetMatcherCollectionContract,
  AssetMatcherCollectionInstance,
} from "./AssetMatcherCollection";
export {
  AuctionHouse1155Contract,
  AuctionHouse1155Instance,
} from "./AuctionHouse1155";
export {
  AuctionHouse721Contract,
  AuctionHouse721Instance,
} from "./AuctionHouse721";
export {
  AuctionHouseBaseContract,
  AuctionHouseBaseInstance,
} from "./AuctionHouseBase";
export {
  AuctionHouseBase1155Contract,
  AuctionHouseBase1155Instance,
} from "./AuctionHouseBase1155";
export {
  AuctionHouseBase721Contract,
  AuctionHouseBase721Instance,
} from "./AuctionHouseBase721";
export { BeaconProxyContract, BeaconProxyInstance } from "./BeaconProxy";
export {
  CryptoPunksMarketContract,
  CryptoPunksMarketInstance,
} from "./CryptoPunksMarket";
export {
  EIP712MetaTransactionContract,
  EIP712MetaTransactionInstance,
} from "./EIP712MetaTransaction";
export { ERC1155BaseContract, ERC1155BaseInstance } from "./ERC1155Base";
export {
  ERC1155BaseURIContract,
  ERC1155BaseURIInstance,
} from "./ERC1155BaseURI";
export {
  ERC1155BurnableUpgradeableContract,
  ERC1155BurnableUpgradeableInstance,
} from "./ERC1155BurnableUpgradeable";
export {
  ERC1155DefaultApprovalContract,
  ERC1155DefaultApprovalInstance,
} from "./ERC1155DefaultApproval";
export { ERC1155HolderContract, ERC1155HolderInstance } from "./ERC1155Holder";
export {
  ERC1155HolderUpgradeableContract,
  ERC1155HolderUpgradeableInstance,
} from "./ERC1155HolderUpgradeable";
export { ERC1155LazyContract, ERC1155LazyInstance } from "./ERC1155Lazy";
export {
  ERC1155LazyMintTransferProxyContract,
  ERC1155LazyMintTransferProxyInstance,
} from "./ERC1155LazyMintTransferProxy";
export {
  ERC1155RaribleContract,
  ERC1155RaribleInstance,
} from "./ERC1155Rarible";
export {
  ERC1155RaribleBeaconContract,
  ERC1155RaribleBeaconInstance,
} from "./ERC1155RaribleBeacon";
export {
  ERC1155RaribleBeaconMetaContract,
  ERC1155RaribleBeaconMetaInstance,
} from "./ERC1155RaribleBeaconMeta";
export {
  ERC1155RaribleFactoryC2Contract,
  ERC1155RaribleFactoryC2Instance,
} from "./ERC1155RaribleFactoryC2";
export {
  ERC1155RaribleMetaContract,
  ERC1155RaribleMetaInstance,
} from "./ERC1155RaribleMeta";
export {
  ERC1155ReceiverContract,
  ERC1155ReceiverInstance,
} from "./ERC1155Receiver";
export {
  ERC1155ReceiverUpgradeableContract,
  ERC1155ReceiverUpgradeableInstance,
} from "./ERC1155ReceiverUpgradeable";
export {
  ERC1155UpgradeableContract,
  ERC1155UpgradeableInstance,
} from "./ERC1155Upgradeable";
export { ERC1271Contract, ERC1271Instance } from "./ERC1271";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export {
  ERC165UpgradeableContract,
  ERC165UpgradeableInstance,
} from "./ERC165Upgradeable";
export {
  ERC20TransferProxyContract,
  ERC20TransferProxyInstance,
} from "./ERC20TransferProxy";
export {
  ERC20UpgradeableContract,
  ERC20UpgradeableInstance,
} from "./ERC20Upgradeable";
export { ERC721BaseContract, ERC721BaseInstance } from "./ERC721Base";
export {
  ERC721BaseMinimalContract,
  ERC721BaseMinimalInstance,
} from "./ERC721BaseMinimal";
export {
  ERC721BurnableUpgradeableContract,
  ERC721BurnableUpgradeableInstance,
} from "./ERC721BurnableUpgradeable";
export {
  ERC721BurnableUpgradeableMinimalContract,
  ERC721BurnableUpgradeableMinimalInstance,
} from "./ERC721BurnableUpgradeableMinimal";
export {
  ERC721DefaultApprovalContract,
  ERC721DefaultApprovalInstance,
} from "./ERC721DefaultApproval";
export {
  ERC721DefaultApprovalMinimalContract,
  ERC721DefaultApprovalMinimalInstance,
} from "./ERC721DefaultApprovalMinimal";
export { ERC721HolderContract, ERC721HolderInstance } from "./ERC721Holder";
export {
  ERC721HolderUpgradeableContract,
  ERC721HolderUpgradeableInstance,
} from "./ERC721HolderUpgradeable";
export { ERC721LazyContract, ERC721LazyInstance } from "./ERC721Lazy";
export {
  ERC721LazyMinimalContract,
  ERC721LazyMinimalInstance,
} from "./ERC721LazyMinimal";
export {
  ERC721LazyMintTransferProxyContract,
  ERC721LazyMintTransferProxyInstance,
} from "./ERC721LazyMintTransferProxy";
export { ERC721RaribleContract, ERC721RaribleInstance } from "./ERC721Rarible";
export {
  ERC721RaribleBeaconContract,
  ERC721RaribleBeaconInstance,
} from "./ERC721RaribleBeacon";
export {
  ERC721RaribleFactoryC2Contract,
  ERC721RaribleFactoryC2Instance,
} from "./ERC721RaribleFactoryC2";
export {
  ERC721RaribleMetaContract,
  ERC721RaribleMetaInstance,
} from "./ERC721RaribleMeta";
export {
  ERC721RaribleMinimalContract,
  ERC721RaribleMinimalInstance,
} from "./ERC721RaribleMinimal";
export {
  ERC721RaribleMinimalBeaconContract,
  ERC721RaribleMinimalBeaconInstance,
} from "./ERC721RaribleMinimalBeacon";
export {
  ERC721RaribleMinimalBeaconMetaContract,
  ERC721RaribleMinimalBeaconMetaInstance,
} from "./ERC721RaribleMinimalBeaconMeta";
export {
  ERC721UpgradeableContract,
  ERC721UpgradeableInstance,
} from "./ERC721Upgradeable";
export {
  ERC721UpgradeableMinimalContract,
  ERC721UpgradeableMinimalInstance,
} from "./ERC721UpgradeableMinimal";
export { ERC721URIContract, ERC721URIInstance } from "./ERC721URI";
export {
  ExchangeMetaV2Contract,
  ExchangeMetaV2Instance,
} from "./ExchangeMetaV2";
export {
  ExchangeOrdersHolderV1Contract,
  ExchangeOrdersHolderV1Instance,
} from "./ExchangeOrdersHolderV1";
export {
  ExchangeStateV1Contract,
  ExchangeStateV1Instance,
} from "./ExchangeStateV1";
export { ExchangeV1Contract, ExchangeV1Instance } from "./ExchangeV1";
export { ExchangeV2Contract, ExchangeV2Instance } from "./ExchangeV2";
export {
  ExchangeV2CoreContract,
  ExchangeV2CoreInstance,
} from "./ExchangeV2Core";
export {
  HasContractURIContract,
  HasContractURIInstance,
} from "./HasContractURI";
export { IAssetMatcherContract, IAssetMatcherInstance } from "./IAssetMatcher";
export { IBeaconContract, IBeaconInstance } from "./IBeacon";
export { IBlurContract, IBlurInstance } from "./IBlur";
export {
  ICryptoPunksMarketContract,
  ICryptoPunksMarketInstance,
} from "./ICryptoPunksMarket";
export {
  IERC1155LazyMintContract,
  IERC1155LazyMintInstance,
} from "./IERC1155LazyMint";
export {
  IERC1155MetadataURIUpgradeableContract,
  IERC1155MetadataURIUpgradeableInstance,
} from "./IERC1155MetadataURIUpgradeable";
export {
  IERC1155ReceiverContract,
  IERC1155ReceiverInstance,
} from "./IERC1155Receiver";
export {
  IERC1155ReceiverUpgradeableContract,
  IERC1155ReceiverUpgradeableInstance,
} from "./IERC1155ReceiverUpgradeable";
export {
  IERC1155UpgradeableContract,
  IERC1155UpgradeableInstance,
} from "./IERC1155Upgradeable";
export { IERC1271Contract, IERC1271Instance } from "./IERC1271";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export {
  IERC165UpgradeableContract,
  IERC165UpgradeableInstance,
} from "./IERC165Upgradeable";
export {
  IERC20TransferProxyContract,
  IERC20TransferProxyInstance,
} from "./IERC20TransferProxy";
export {
  IERC20UpgradeableContract,
  IERC20UpgradeableInstance,
} from "./IERC20Upgradeable";
export { IERC2981Contract, IERC2981Instance } from "./IERC2981";
export {
  IERC721EnumerableUpgradeableContract,
  IERC721EnumerableUpgradeableInstance,
} from "./IERC721EnumerableUpgradeable";
export {
  IERC721LazyMintContract,
  IERC721LazyMintInstance,
} from "./IERC721LazyMint";
export {
  IERC721MetadataUpgradeableContract,
  IERC721MetadataUpgradeableInstance,
} from "./IERC721MetadataUpgradeable";
export {
  IERC721ReceiverContract,
  IERC721ReceiverInstance,
} from "./IERC721Receiver";
export {
  IERC721ReceiverUpgradeableContract,
  IERC721ReceiverUpgradeableInstance,
} from "./IERC721ReceiverUpgradeable";
export {
  IERC721UpgradeableContract,
  IERC721UpgradeableInstance,
} from "./IERC721Upgradeable";
export { IExchangeV2Contract, IExchangeV2Instance } from "./IExchangeV2";
export { ILooksRareContract, ILooksRareInstance } from "./ILooksRare";
export {
  IMarketWrapperContract,
  IMarketWrapperInstance,
} from "./IMarketWrapper";
export {
  INftTransferProxyContract,
  INftTransferProxyInstance,
} from "./INftTransferProxy";
export {
  IRoyaltiesProviderContract,
  IRoyaltiesProviderInstance,
} from "./IRoyaltiesProvider";
export { ISeaPortContract, ISeaPortInstance } from "./ISeaPort";
export { IsPausableContract, IsPausableInstance } from "./IsPausable";
export {
  ITransferProxyContract,
  ITransferProxyInstance,
} from "./ITransferProxy";
export {
  IWyvernExchangeContract,
  IWyvernExchangeInstance,
} from "./IWyvernExchange";
export { Ix2y2Contract, Ix2y2Instance } from "./Ix2y2";
export { LibAssetContract, LibAssetInstance } from "./LibAsset";
export { LibAucDataV1Contract, LibAucDataV1Instance } from "./LibAucDataV1";
export { LibBidDataV1Contract, LibBidDataV1Instance } from "./LibBidDataV1";
export {
  LibERC1155LazyMintContract,
  LibERC1155LazyMintInstance,
} from "./LibERC1155LazyMint";
export {
  LibERC721LazyMintContract,
  LibERC721LazyMintInstance,
} from "./LibERC721LazyMint";
export {
  LibOrderDataV1Contract,
  LibOrderDataV1Instance,
} from "./LibOrderDataV1";
export {
  LibOrderDataV2Contract,
  LibOrderDataV2Instance,
} from "./LibOrderDataV2";
export {
  LibOrderDataV3Contract,
  LibOrderDataV3Instance,
} from "./LibOrderDataV3";
export { LibPartContract, LibPartInstance } from "./LibPart";
export { LockingContract, LockingInstance } from "./Locking";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export { MintableTokenContract, MintableTokenInstance } from "./MintableToken";
export {
  MinterAccessControlContract,
  MinterAccessControlInstance,
} from "./MinterAccessControl";
export { OperatorRoleContract, OperatorRoleInstance } from "./OperatorRole";
export { OwnableContract, OwnableInstance } from "./Ownable";
export {
  OwnableUpgradeableContract,
  OwnableUpgradeableInstance,
} from "./OwnableUpgradeable";
export { ProxyContract, ProxyInstance } from "./Proxy";
export {
  PunkTransferProxyContract,
  PunkTransferProxyInstance,
} from "./PunkTransferProxy";
export {
  RaribleExchangeWrapperContract,
  RaribleExchangeWrapperInstance,
} from "./RaribleExchangeWrapper";
export { RaribleTokenContract, RaribleTokenInstance } from "./RaribleToken";
export {
  RaribleTransferManagerContract,
  RaribleTransferManagerInstance,
} from "./RaribleTransferManager";
export {
  RoyaltiesProviderArtBlocksContract,
  RoyaltiesProviderArtBlocksInstance,
} from "./RoyaltiesProviderArtBlocks";
export {
  RoyaltiesProviderV2LegacyContract,
  RoyaltiesProviderV2LegacyInstance,
} from "./RoyaltiesProviderV2Legacy";
export {
  RoyaltiesRegistryContract,
  RoyaltiesRegistryInstance,
} from "./RoyaltiesRegistry";
export { RoyaltiesV1Contract, RoyaltiesV1Instance } from "./RoyaltiesV1";
export { RoyaltiesV2Contract, RoyaltiesV2Instance } from "./RoyaltiesV2";
export {
  RoyaltiesV2ImplContract,
  RoyaltiesV2ImplInstance,
} from "./RoyaltiesV2Impl";
export {
  RoyaltiesV2UpgradeableContract,
  RoyaltiesV2UpgradeableInstance,
} from "./RoyaltiesV2Upgradeable";
export {
  RoyaltyArtBlocksContract,
  RoyaltyArtBlocksInstance,
} from "./RoyaltyArtBlocks";
export {
  RoyaltyV2LegacyContract,
  RoyaltyV2LegacyInstance,
} from "./RoyaltyV2Legacy";
export { TestERC20Contract, TestERC20Instance } from "./TestERC20";
export {
  TokenToAuctionContract,
  TokenToAuctionInstance,
} from "./TokenToAuction";
export {
  TransferExecutorContract,
  TransferExecutorInstance,
} from "./TransferExecutor";
export { TransferProxyContract, TransferProxyInstance } from "./TransferProxy";
export {
  TransferProxyForDeprecatedContract,
  TransferProxyForDeprecatedInstance,
} from "./TransferProxyForDeprecated";
export {
  UpgradeableBeaconContract,
  UpgradeableBeaconInstance,
} from "./UpgradeableBeacon";
export { WETH9Contract, WETH9Instance } from "./WETH9";
export { WrapperContract, WrapperInstance } from "./Wrapper";
