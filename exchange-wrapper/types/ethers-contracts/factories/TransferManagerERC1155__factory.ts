/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  TransferManagerERC1155,
  TransferManagerERC1155Interface,
} from "../TransferManagerERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_looksRareExchange",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "LOOKS_RARE_EXCHANGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferNonFungibleToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161027b38038061027b8339818101604052602081101561003357600080fd5b5051606081901b6001600160601b0319166080526001600160a01b031661021061006b6000398060ae528061019752506102106000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806333f2fa9f1461003b5780633dd7df501461007f575b600080fd5b61007d600480360360a081101561005157600080fd5b506001600160a01b038135811691602081013582169160408201351690606081013590608001356100a3565b005b610087610195565b604080516001600160a01b039092168252519081900360200190f35b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010a5760405162461bcd60e51b81526004018080602001828103825260218152602001806101ba6021913960400191505060405180910390fd5b60408051637921219560e11b81526001600160a01b0386811660048301528581166024830152604482018590526064820184905260a06084830152600060a4830181905292519088169263f242432a9260c4808201939182900301818387803b15801561017657600080fd5b505af115801561018a573d6000803e3d6000fd5b505050505050505050565b7f00000000000000000000000000000000000000000000000000000000000000008156fe5472616e736665723a204f6e6c79204c6f6f6b73526172652045786368616e6765a26469706673582212200fb96f69048fc4b209f44ae9932ba7ad10f13a2c8398ba14cbdb718edf169c4564736f6c63430007060033";

type TransferManagerERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferManagerERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TransferManagerERC1155__factory extends ContractFactory {
  constructor(...args: TransferManagerERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _looksRareExchange: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TransferManagerERC1155> {
    return super.deploy(
      _looksRareExchange,
      overrides || {}
    ) as Promise<TransferManagerERC1155>;
  }
  override getDeployTransaction(
    _looksRareExchange: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_looksRareExchange, overrides || {});
  }
  override attach(address: string): TransferManagerERC1155 {
    return super.attach(address) as TransferManagerERC1155;
  }
  override connect(signer: Signer): TransferManagerERC1155__factory {
    return super.connect(signer) as TransferManagerERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferManagerERC1155Interface {
    return new utils.Interface(_abi) as TransferManagerERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TransferManagerERC1155 {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TransferManagerERC1155;
  }
}
