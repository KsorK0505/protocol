/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  ExecutionDelegate,
  ExecutionDelegateInterface,
} from "../ExecutionDelegate";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "ApproveContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "DenyContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "GrantApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "RevokeApproval",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contracts",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "revokedApproval",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "approveContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contract",
        type: "address",
      },
    ],
    name: "denyContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "grantApproval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferERC721Unsafe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collection",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c378061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063b7e2077e11610066578063b7e2077e1461019d578063ca72da8e146101b0578063da3e8ce4146101c3578063f2fde38b146101d657600080fd5b80638da5cb5b1461017257806390d02b3c1461018d578063a8034df11461019557600080fd5b806307f7aafb146100d45780634a3e3a1f146100e957806369dc9ff314610121578063715018a61461014457806374a9402e1461014c578063789f93f61461015f575b600080fd5b6100e76100e23660046109fb565b6101e9565b005b61010c6100f73660046109fb565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61010c61012f3660046109fb565b60016020526000908152604090205460ff1681565b6100e761026b565b6100e761015a366004610a16565b6102a1565b6100e761016d366004610a6b565b61038f565b6000546040516001600160a01b039091168152602001610118565b6100e7610468565b6100e76104aa565b6100e76101ab3660046109fb565b6104e9565b6100e76101be366004610a6b565b61055c565b6100e76101d1366004610a6b565b610601565b6100e76101e43660046109fb565b610733565b6000546001600160a01b0316331461021c5760405162461bcd60e51b815260040161021390610ab6565b60405180910390fd5b6001600160a01b0381166000818152600160208190526040808320805460ff1916909217909155517f283ffe02a14663588cf87ba17adbc21c9ce0d0cdb15655926bf2b987af3075fe9190a250565b6000546001600160a01b031633146102955760405162461bcd60e51b815260040161021390610ab6565b61029f60006107ce565b565b3360009081526001602052604090205460ff166102d05760405162461bcd60e51b815260040161021390610aeb565b6001600160a01b03841660009081526002602052604090205460ff16156103095760405162461bcd60e51b815260040161021390610b35565b604051637921219560e11b81526001600160a01b0385811660048301528481166024830152604482018490526064820183905260a06084830152600060a483015286169063f242432a9060c401600060405180830381600087803b15801561037057600080fd5b505af1158015610384573d6000803e3d6000fd5b505050505050505050565b3360009081526001602052604090205460ff166103be5760405162461bcd60e51b815260040161021390610aeb565b6001600160a01b03831660009081526002602052604090205460ff16156103f75760405162461bcd60e51b815260040161021390610b35565b604051632142170760e11b81526001600160a01b0384811660048301528381166024830152604482018390528516906342842e0e906064015b600060405180830381600087803b15801561044a57600080fd5b505af115801561045e573d6000803e3d6000fd5b5050505050505050565b33600081815260026020526040808220805460ff19166001179055517fdddeac663983b1e35153215a4578fecbb5921d12e660b3c4259aa7d9dbb9709f9190a2565b33600081815260026020526040808220805460ff19169055517f120d91a0121c2d5a7ce9638fce4bd262d4b443568fce40f681f50dca814a629a9190a2565b6000546001600160a01b031633146105135760405162461bcd60e51b815260040161021390610ab6565b6001600160a01b038116600081815260016020526040808220805460ff19169055517f2b35b0a030b4f4cef0a9e8d01828235bb82a11ec4e37c11bd6d8770d9aafb17c9190a250565b3360009081526001602052604090205460ff1661058b5760405162461bcd60e51b815260040161021390610aeb565b6001600160a01b03831660009081526002602052604090205460ff16156105c45760405162461bcd60e51b815260040161021390610b35565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528516906323b872dd90606401610430565b3360009081526001602052604090205460ff166106305760405162461bcd60e51b815260040161021390610aeb565b6001600160a01b03831660009081526002602052604090205460ff16156106695760405162461bcd60e51b815260040161021390610b35565b604080516001600160a01b038581166024830152848116604483015260648083018590528351808403909101815260849092019092526020810180516001600160e01b03166323b872dd60e01b179052906000906106c99087168361081e565b80519091501561072b57808060200190518101906106e79190610b6c565b61072b5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c081d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610213565b505050505050565b6000546001600160a01b0316331461075d5760405162461bcd60e51b815260040161021390610ab6565b6001600160a01b0381166107c25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610213565b6107cb816107ce565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b606061086083836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c65640000815250610867565b9392505050565b6060610876848460008561087e565b949350505050565b6060824710156108df5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610213565b843b61092d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610213565b600080866001600160a01b031685876040516109499190610bb2565b60006040518083038185875af1925050503d8060008114610986576040519150601f19603f3d011682016040523d82523d6000602084013e61098b565b606091505b509150915061099b8282866109a6565b979650505050505050565b606083156109b5575081610860565b8251156109c55782518084602001fd5b8160405162461bcd60e51b81526004016102139190610bce565b80356001600160a01b03811681146109f657600080fd5b919050565b600060208284031215610a0d57600080fd5b610860826109df565b600080600080600060a08688031215610a2e57600080fd5b610a37866109df565b9450610a45602087016109df565b9350610a53604087016109df565b94979396509394606081013594506080013592915050565b60008060008060808587031215610a8157600080fd5b610a8a856109df565b9350610a98602086016109df565b9250610aa6604086016109df565b9396929550929360600135925050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602a908201527f436f6e7472616374206973206e6f7420617070726f76656420746f206d616b65604082015269207472616e736665727360b01b606082015260800190565b60208082526019908201527f5573657220686173207265766f6b656420617070726f76616c00000000000000604082015260600190565b600060208284031215610b7e57600080fd5b8151801515811461086057600080fd5b60005b83811015610ba9578181015183820152602001610b91565b50506000910152565b60008251610bc4818460208701610b8e565b9190910192915050565b6020815260008251806020840152610bed816040850160208701610b8e565b601f01601f1916919091016040019291505056fea2646970667358221220da2f85b9514960271a58fd1c68dc69025659518d30ad22569792b0078ad6b8e964736f6c63430008110033";

type ExecutionDelegateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExecutionDelegateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExecutionDelegate__factory extends ContractFactory {
  constructor(...args: ExecutionDelegateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ExecutionDelegate> {
    return super.deploy(overrides || {}) as Promise<ExecutionDelegate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExecutionDelegate {
    return super.attach(address) as ExecutionDelegate;
  }
  override connect(signer: Signer): ExecutionDelegate__factory {
    return super.connect(signer) as ExecutionDelegate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutionDelegateInterface {
    return new utils.Interface(_abi) as ExecutionDelegateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExecutionDelegate {
    return new Contract(address, _abi, signerOrProvider) as ExecutionDelegate;
  }
}
