/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ILooksRare, ILooksRareInterface } from "../ILooksRare";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isOrderAsk",
            type: "bool",
          },
          {
            internalType: "address",
            name: "taker",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentageToAsk",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
        ],
        internalType: "struct LibLooksRare.TakerOrder",
        name: "takerBid",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isOrderAsk",
            type: "bool",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "strategy",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minPercentageToAsk",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "params",
            type: "bytes",
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct LibLooksRare.MakerOrder",
        name: "makerAsk",
        type: "tuple",
      },
    ],
    name: "matchAskWithTakerBidUsingETHAndWETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "additionalParameters",
            type: "bytes",
          },
        ],
        internalType: "struct LibLooksRare.Taker",
        name: "takerBid",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum LibLooksRare.QuoteType",
            name: "quoteType",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "globalNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "subsetNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "orderNonce",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "strategyId",
            type: "uint256",
          },
          {
            internalType: "enum LibLooksRare.CollectionType",
            name: "collectionType",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "collection",
            type: "address",
          },
          {
            internalType: "address",
            name: "currency",
            type: "address",
          },
          {
            internalType: "address",
            name: "signer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "itemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "additionalParameters",
            type: "bytes",
          },
        ],
        internalType: "struct LibLooksRare.Maker",
        name: "makerAsk",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "makerSignature",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "root",
            type: "bytes32",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "value",
                type: "bytes32",
              },
              {
                internalType: "enum LibLooksRare.MerkleTreeNodePosition",
                name: "position",
                type: "uint8",
              },
            ],
            internalType: "struct LibLooksRare.MerkleTreeNode[]",
            name: "proof",
            type: "tuple[]",
          },
        ],
        internalType: "struct LibLooksRare.MerkleTree",
        name: "merkleTree",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "affiliate",
        type: "address",
      },
    ],
    name: "executeTakerBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ILooksRare__factory {
  static readonly abi = _abi;
  static createInterface(): ILooksRareInterface {
    return new utils.Interface(_abi) as ILooksRareInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILooksRare {
    return new Contract(address, _abi, signerOrProvider) as ILooksRare;
  }
}
