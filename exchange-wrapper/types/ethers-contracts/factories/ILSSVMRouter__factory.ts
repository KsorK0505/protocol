/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ILSSVMRouter, ILSSVMRouterInterface } from "../ILSSVMRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "pair",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "nftIds",
            type: "uint256[]",
          },
        ],
        internalType: "struct ILSSVMRouter.PairSwapSpecific[]",
        name: "swapList",
        type: "tuple[]",
      },
      {
        internalType: "address payable",
        name: "ethRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "nftRecipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForSpecificNFTs",
    outputs: [
      {
        internalType: "uint256",
        name: "remainingValue",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

export class ILSSVMRouter__factory {
  static readonly abi = _abi;
  static createInterface(): ILSSVMRouterInterface {
    return new utils.Interface(_abi) as ILSSVMRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ILSSVMRouter {
    return new Contract(address, _abi, signerOrProvider) as ILSSVMRouter;
  }
}
